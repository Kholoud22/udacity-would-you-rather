{
  "version": 3,
  "sources": [
    "utils/_DATA.js",
    "utils/api.js",
    "actions/index.js",
    "actions/authed-user.js",
    "actions/shared.js",
    "actions/users.js",
    "actions/questions.js",
    "views/Login.js",
    "views/Leaderboard.js",
    "views/Nav.js",
    "components/Question.js",
    "views/Dashboard.js",
    "App.js",
    "reducers/index.js",
    "reducers/questions.js",
    "reducers/users.js",
    "reducers/authed-user.js",
    "store/index.js",
    "index.js"
  ],
  "names": [
    "users",
    "sarahedo",
    "id",
    "name",
    "avatarURL",
    "answers",
    "am8ehyc8byjqgar0jgpub9",
    "loxhs1bqm25b708cmbf3g",
    "questions",
    "tylermcginnis",
    "vthrdm985a262al8qx3do",
    "xj352vofupe1dqz9emx13r",
    "johndoe",
    "author",
    "timestamp",
    "optionOne",
    "votes",
    "text",
    "optionTwo",
    "SET_AUTHED_USER",
    "USER_ANSWERED_QUESTION",
    "USER_ADDED_QUESTION",
    "RECEIVE_USERS",
    "RECEIVE_QUESTIONS",
    "ADD_QUESTION",
    "ANSWER_QUESTION",
    "setAuthedUser",
    "userId",
    "type",
    "data",
    "handleInitialData",
    "dispatch",
    "showLoading",
    "Promise",
    "all",
    "res",
    "rej",
    "setTimeout",
    "then",
    "receiveUsers",
    "receiveQuestions",
    "hideLoading",
    "Login",
    "state",
    "authedUser",
    "handleChange",
    "event",
    "setState",
    "target",
    "value",
    "props",
    "history",
    "push",
    "usersPayload",
    "this",
    "className",
    "style",
    "height",
    "display",
    "justifyContent",
    "alignItems",
    "Card",
    "boxShadow",
    "border",
    "padding",
    "Body",
    "FormControl",
    "FormLabel",
    "RadioGroup",
    "onChange",
    "map",
    "user",
    "FormControlLabel",
    "control",
    "Radio",
    "label",
    "Component",
    "withRouter",
    "connect",
    "Object",
    "values",
    "Leaderboard",
    "console",
    "log",
    "leaderboardPayload",
    "Container",
    "Row",
    "margin",
    "maxWidth",
    "Col",
    "sm",
    "Image",
    "src",
    "width",
    "borderRight",
    "questionsCreatedCount",
    "answersCount",
    "Button",
    "disabled",
    "background",
    "score",
    "length",
    "sort",
    "sortBy",
    "Nav",
    "currentUser",
    "redirect",
    "lg",
    "marginRight",
    "borderRadius",
    "to",
    "variant",
    "onClick",
    "preventDefault",
    "React",
    "useStyles",
    "makeStyles",
    "theme",
    "title",
    "color",
    "palette",
    "secondary",
    "main",
    "Question",
    "classes",
    "CardContent",
    "Grid",
    "container",
    "item",
    "md",
    "alt",
    "Typography",
    "gutterBottom",
    "CardActions",
    "fullWidth",
    "protoTypes",
    "PropTypes",
    "string",
    "isRequired",
    "shape",
    "array",
    "Dashboard",
    "formatQuestions",
    "questionsIds",
    "questionId",
    "answeredQuestions",
    "keys",
    "filter",
    "includes",
    "unAnsweredQuestions",
    "Tab",
    "defaultActiveKey",
    "Item",
    "Link",
    "eventKey",
    "Content",
    "Pane",
    "question",
    "key",
    "App",
    "exact",
    "path",
    "component",
    "rootReducer",
    "combineReducers",
    "action",
    "qid",
    "answer",
    "targetOption",
    "loadingBar",
    "loadingBarReducer",
    "middlewares",
    "thunk",
    "store",
    "createStore",
    "compose",
    "applyMiddleware",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.a39fc5ce.chunk.js",
  "sourcesContent": [
    "let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://i.pravatar.cc/150?u=a042581f4e29026704d',\n    answers: {\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\n      loxhs1bqm25b708cmbf3g: 'optionTwo',\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://i.pravatar.cc/150?u=a042581f4e29026704ad',\n    answers: {\n      vthrdm985a262al8qx3do: 'optionOne',\n      xj352vofupe1dqz9emx13r: 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://i.pravatar.cc/150?u=a042581f4e29026704az',\n    answers: {\n      xj352vofupe1dqz9emx13r: 'optionOne',\n      vthrdm985a262al8qx3do: 'optionTwo',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  },\n}\n\nlet questions = {\n  '8xf0y6ziyjabvozdd253nd': {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory',\n    },\n  },\n  '6ni6ok3ym7mf1p33lnez': {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain',\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic',\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer',\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500',\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift',\n    },\n  },\n}\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  )\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000)\n  })\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000)\n  })\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  }\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author\n    const formattedQuestion = formatQuestion(question)\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      }\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      }\n\n      res()\n    }, 500)\n  })\n}\n",
    "import {\n  _getQuestions,\n  _getUsers,\n  _saveQuestion,\n  _saveQuestionAnswer,\n} from './_DATA'\n\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getQuestions()]).then(\n    ([users, questions]) => ({\n      users,\n      questions,\n    })\n  )\n}\n\nexport const saveQuestion = (q) => _saveQuestion(q)\n\nexport const saveQuestionAnswer = (answerInfo) =>\n  _saveQuestionAnswer(answerInfo)\n",
    "export const SET_AUTHED_USER = 'SET_AUTHED_USER'\nexport const USER_ANSWERED_QUESTION = 'USER_ANSWERED_QUESTION'\nexport const USER_ADDED_QUESTION = 'USER_ADD_QUESTION'\nexport const RECEIVE_USERS = 'RECEIVE_USERS'\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\n",
    "import { SET_AUTHED_USER } from '.'\n\nexport function setAuthedUser(userId) {\n  return {\n    type: SET_AUTHED_USER,\n    data: { userId },\n  }\n}\n",
    "import { showLoading, hideLoading } from 'react-redux-loading'\nimport { getInitialData } from '../utils/api'\nimport { receiveQuestions } from './questions'\nimport { receiveUsers } from './users'\nimport { setAuthedUser } from './authed-user'\n\nconst AUTHED_ID = ''\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveUsers(users))\n      dispatch(receiveQuestions(questions))\n      dispatch(setAuthedUser(AUTHED_ID))\n      dispatch(hideLoading())\n    })\n  }\n}\n",
    "import { RECEIVE_USERS, USER_ADDED_QUESTION, USER_ANSWERED_QUESTION } from '.'\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    data: { users },\n  }\n}\n\nexport function userAddedQuestion({ authedUser, qid }) {\n  return { type: USER_ADDED_QUESTION, data: { authedUser, qid } }\n}\n\nexport function userAnsweredQuestion({ authedUser, qid, answer }) {\n  return { type: USER_ANSWERED_QUESTION, data: { answer, qid, authedUser } }\n}\n",
    "import { ADD_QUESTION, ANSWER_QUESTION, RECEIVE_QUESTIONS } from '.'\nimport { showLoading, hideLoading } from 'react-redux-loading'\nimport { saveQuestion, saveQuestionAnswer } from '../utils/api'\nimport { userAddedQuestion, userAnsweredQuestion } from './users'\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    data: { questions },\n  }\n}\n\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    data: { question },\n  }\n}\n\nfunction answerQuestion({ authedUser, qid, answer }) {\n  return {\n    type: ANSWER_QUESTION,\n    data: { authedUser, qid, answer },\n  }\n}\n\nexport function handleSaveQuestion({ optionOneText, optionTwoText, author }) {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return saveQuestion({ optionOneText, optionTwoText, author }).then(\n      (question) => {\n        dispatch(userAddedQuestion({ authedUser: author, qid: question.id }))\n        dispatch(addQuestion(question))\n        dispatch(hideLoading())\n      }\n    )\n  }\n}\n\nexport function handleSaveQuestionAnswer({ authedUser, qid, answer }) {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return saveQuestionAnswer({ authedUser, qid, answer }).then(() => {\n      dispatch(userAnsweredQuestion({ authedUser, qid, answer }))\n      dispatch(answerQuestion({ authedUser, qid, answer }))\n      dispatch(hideLoading())\n    })\n  }\n}\n",
    "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/authed-user'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Card } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nclass Login extends Component {\n  state = {\n    authedUser: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({ authedUser: event.target.value })\n    this.props.setAuthedUser(event.target.value)\n    this.props.history.push('/')\n  }\n  // Login = (event) => {\n  //   event.preventDefault()\n  //   this.props.history.push('/')\n  // }\n  render() {\n    const { usersPayload } = this.props\n    const { authedUser } = this.state\n    return (\n      <div\n        className=\"container\"\n        style={{\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Card\n          style={{\n            boxShadow: '5px 5px cadetblue',\n            border: '1px solid',\n            padding: '10px',\n          }}\n        >\n          <h1>Would You rather app</h1>\n          <Card.Body>\n            <FormControl>\n              <FormLabel>Login</FormLabel>\n              <RadioGroup\n                aria-label=\"Login\"\n                name=\"login\"\n                value={authedUser}\n                onChange={this.handleChange}\n              >\n                {usersPayload &&\n                  usersPayload.map((user) => (\n                    <FormControlLabel\n                      key={user.id}\n                      value={user.id}\n                      control={<Radio />}\n                      label={user.name}\n                    />\n                  ))}\n              </RadioGroup>\n            </FormControl>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ users }) => {\n  const usersPayload = Object.values(users).map((user) => ({\n    avatarURL: user.avatarURL,\n    id: user.id,\n    name: user.name,\n  }))\n  return {\n    usersPayload,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setAuthedUser: (userId) => dispatch(setAuthedUser(userId)),\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login))\n",
    "import React, { Component } from 'react'\nimport { Row, Col, Container, Image, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport sortBy from 'sort-by'\nimport { withRouter } from 'react-router-dom'\n\nclass Leaderboard extends Component {\n  componentDidMount() {\n    console.log('here', this.props)\n  }\n  render() {\n    const { leaderboardPayload } = this.props\n    return (\n      <Container>\n        <h1>Leaderboard</h1>\n        <Row>\n          {leaderboardPayload &&\n            leaderboardPayload.map((user) => (\n              <div\n                key={user.id}\n                className=\"col-4\"\n                style={{\n                  border: '1px solid cadetblue',\n                  boxShadow: '2px 2px cadetblue',\n                  margin: '10px',\n                  maxWidth: '300px',\n                }}\n              >\n                <Row>\n                  <Col sm={12} className=\"p-0\">\n                    <Image\n                      src={user.avatarURL}\n                      style={{\n                        width: 'inherit',\n                      }}\n                    ></Image>\n                  </Col>\n                  <Col>\n                    <h3>{user.name}</h3>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col\n                    sm={8}\n                    style={{\n                      borderRight: '1px solid cadetblue',\n                    }}\n                  >\n                    <div>\n                      <h6>Questions Created: </h6>\n                      {user.questionsCreatedCount}\n                    </div>\n                    <div>\n                      <h6>Questions Answered: </h6>\n                      {user.answersCount}\n                    </div>\n                  </Col>\n                  <Col sm={4} className=\"m-auto\">\n                    <Button\n                      disabled\n                      className=\"rounded-circle\"\n                      style={{\n                        maxWidth: '45px',\n                        background: 'cadetblue',\n                        border: 'none',\n                      }}\n                    >\n                      {user.score}\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            ))}\n        </Row>\n      </Container>\n    )\n  }\n}\nconst mapStateToPro = ({ users }) => {\n  const leaderboardPayload = Object.values(users)\n    .map((user) => ({\n      avatarURL: user.avatarURL,\n      id: user.id,\n      name: user.name,\n      answersCount: Object.values(user.answers).length,\n      questionsCreatedCount: user.questions.length,\n      score: Object.values(user.answers).length + user.questions.length,\n    }))\n    .sort(sortBy('-score'))\n  return {\n    leaderboardPayload,\n  }\n}\n\nexport default withRouter(connect(mapStateToPro)(Leaderboard))\n",
    "import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setAuthedUser } from '../actions/authed-user'\r\nimport { Image, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\nclass Nav extends React.Component {\r\n  state = {\r\n    currentUser: '',\r\n  }\r\n  componentDidMount() {\r\n    this.redirect()\r\n  }\r\n  redirect = () => {\r\n    if (this.props.users[this.props.authedUser])\r\n      this.setState({ currentUser: this.props.users[this.props.authedUser] })\r\n    else {\r\n      this.props.history.push('/login')\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div lg=\"auto\">\r\n              <Image\r\n                src={this.state.currentUser.avatarURL}\r\n                style={{\r\n                  width: 'auto',\r\n                  height: 35,\r\n                  marginRight: '30px',\r\n                  borderRadius: '5pc',\r\n                }}\r\n              ></Image>\r\n              {this.state.currentUser.name}\r\n            </div>\r\n          </Col>\r\n          <Col lg=\"auto\">\r\n            <NavLink to=\"/\">Home</NavLink>\r\n          </Col>\r\n          <Col lg=\"auto\">\r\n            <NavLink to=\"/add\">New Question</NavLink>\r\n          </Col>\r\n          <Col lg=\"auto\">\r\n            <NavLink to=\"/leaderboard\">Leader Board</NavLink>\r\n          </Col>\r\n          <Col lg=\"auto\">\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={(event) => {\r\n                event.preventDefault()\r\n                this.props.setAuthedUser(null)\r\n                this.props.history.push('/login')\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ authedUser, users }) => ({\r\n  authedUser,\r\n  users,\r\n})\r\nconst mapDisPatchToProps = (dispatch) => {\r\n  return {\r\n    setAuthedUser: (id) => dispatch(setAuthedUser(id)),\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDisPatchToProps)(Nav))\r\n",
    "import React from 'react'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core'\nimport PropTypes from 'prop-types' // ES6\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: theme.palette.secondary.main,\n  },\n}))\n\nconst Question = ({ id, avatarURL, author, optionOne, optionTwo }) => {\n  const classes = useStyles()\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Grid container>\n          <Grid item md={2}>\n            <img src={avatarURL} alt={`${author} avatar`} width=\"120px\" />\n          </Grid>\n          <Grid item md={10}>\n            <Typography gutterBottom>\n              <span className={classes.title}>{author}</span> asks Would you\n              rather\n            </Typography>\n            <Typography color=\"textSecondary\">{optionOne.text}</Typography>\n            <Typography color=\"textSecondary\">{optionTwo.text}?</Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <Link to={`/question/${id}`} style={{ width: '100%' }}>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"secondary\">\n            View Question\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  )\n}\n\nQuestion.protoTypes = {\n  id: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  optionOne: PropTypes.shape({\n    votes: PropTypes.array.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n  optionTwo: PropTypes.array.isRequired,\n}\n\nexport default Question\n",
    "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport sortBy from 'sort-by'\nimport Question from '../components/Question'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, Container, Tab, Nav } from 'react-bootstrap'\n\nclass Dashboard extends Component {\n  state = {\n    value: 0,\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value })\n  }\n\n  formatQuestions = (questionsIds) =>\n    questionsIds\n      .map((questionId) => ({\n        author: this.props.questions[questionId].author,\n        id: questionId,\n        optionOne: this.props.questions[questionId].optionOne,\n        optionTwo: this.props.questions[questionId].optionTwo,\n        timestamp: this.props.questions[questionId].timestamp,\n        avatarURL:\n          this.props.users[this.props.questions[questionId].author].avatarURL,\n      }))\n      .sort(sortBy('-timestamp'))\n\n  render() {\n    const { value } = this.state\n    const { questions, authedUser } = this.props\n    const answeredQuestions = Object.keys(questions).filter(\n      (questionId) =>\n        questions[questionId].optionOne.votes.includes(authedUser) ||\n        questions[questionId].optionTwo.votes.includes(authedUser)\n    )\n\n    const unAnsweredQuestions = Object.keys(questions).filter(\n      (questionId) =>\n        !questions[questionId].optionOne.votes.includes(authedUser) &&\n        !questions[questionId].optionTwo.votes.includes(authedUser)\n    )\n\n    return (\n      <Container>\n        <h1>Dashboard</h1>\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Col sm=\"auto\">\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"first\">\n                    Unanswered Questions {unAnsweredQuestions.length}\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"second\">\n                    Answered Questions {answeredQuestions.length}\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"first\">\n                  {unAnsweredQuestions &&\n                    this.formatQuestions(unAnsweredQuestions).map(\n                      (question) => <Question {...question} key={question.id} />\n                    )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"second\">\n                  {answeredQuestions &&\n                    this.formatQuestions(answeredQuestions).map((question) => (\n                      <Question {...question} key={question.id} />\n                    ))}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ users, questions, authedUser }) => ({\n  questions,\n  users,\n  authedUser,\n})\n\nexport default withRouter(connect(mapStateToProps)(Dashboard))\n",
    "import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport LoadingBar from 'react-redux-loading'\nimport { Switch, Route } from 'react-router-dom'\nimport { handleInitialData } from './actions/shared'\nimport Login from './views/Login'\nimport Leaderboard from './views/Leaderboard'\nimport Nav from './views/Nav'\nimport Dashboard from './views/Dashboard'\nclass App extends Component {\n  componentDidMount() {\n    this.props.handleInitialData()\n    console.log(this.props)\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <LoadingBar />\n        <div className=\"container\">\n          {!this.props.authedUser ? (\n            <Route path=\"/login\" exact component={Login} />\n          ) : (\n            <div>\n              <Nav />\n              <Route exact path=\"/\" exact component={Dashboard} />\n              <Route path=\"/leaderboard\" exact component={Leaderboard} />\n              {/* <Route path=\"/tweet/:id\" component={TweetPage} />\n              <Route path=\"/add\" component={NewTweet} /> */}\n            </div>\n          )}\n        </div>\n        {/* <Switch>\n          <Route\n            exact\n            path=\"/login\"\n            name=\"Login Page\"\n            render={(props) => <Login {...props} />}\n          />\n          <ProtectedRoute path=\"/\" name=\"Main\" component={Layout} />\n        </Switch> */}\n      </Fragment>\n    )\n  }\n}\nconst mapStateToProps = ({ authedUser }) => ({\n  authedUser,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleInitialData: () => dispatch(handleInitialData()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n",
    "import { combineReducers } from 'redux'\nimport { loadingBarReducer } from 'react-redux-loading'\nimport questions from './questions'\nimport users from './users'\nimport authedUser from './authed-user'\n\nconst rootReducer = combineReducers({\n  questions,\n  users,\n  authedUser,\n  loadingBar: loadingBarReducer,\n})\n\nexport default rootReducer\n",
    "import { ADD_QUESTION, RECEIVE_QUESTIONS, ANSWER_QUESTION } from '../actions'\n\nexport default function questionsReducer(questions = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...questions,\n        ...action.data.questions,\n      }\n    case ADD_QUESTION:\n      const { question } = action.data\n      return {\n        ...questions,\n        [question.id]: question,\n      }\n    case ANSWER_QUESTION:\n      const { authedUser, qid, answer } = action.data\n      const targetOption = questions[qid][answer]\n      return {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...targetOption,\n            votes: [...targetOption.votes, authedUser],\n          },\n        },\n      }\n    default:\n      return questions\n  }\n}\n",
    "import {\n  RECEIVE_USERS,\n  USER_ADDED_QUESTION,\n  USER_ANSWERED_QUESTION,\n} from '../actions'\n\nexport default function usersReducer(users = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...users,\n        ...action.data.users,\n      }\n    case USER_ADDED_QUESTION:\n      const authedUser = action.data.authedUser\n      const questionId = action.data.qid\n      return {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: [...users[authedUser].questions, questionId],\n        },\n      }\n    case USER_ANSWERED_QUESTION:\n      return {\n        ...users,\n        [action.data.authedUser]: {\n          ...users[action.data.authedUser],\n          answers: {\n            ...users[action.data.authedUser].answers,\n            [action.data.qid]: action.data.answer,\n          },\n        },\n      }\n    default:\n      return users\n  }\n}\n",
    "import { SET_AUTHED_USER } from '../actions'\n\nexport default function authedUserReducer(state = {}, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      const { userId } = action.data\n      return userId\n    default:\n      return state\n  }\n}\n",
    "import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nconst initialState = {}\nconst middlewares = [thunk]\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middlewares))\n)\n\nexport default store\n",
    "import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"
  ],
  "sourceRoot": ""
}
